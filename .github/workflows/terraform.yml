name: Terraform Plan

on:
  pull_request:
    branches:
      - okta-dev
      - okta-preview

jobs:
  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest

    permissions:
      contents: read

    env:
      AWS_REGION: us-east-2 # Change if your resources are in a different region

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set environment-specific variables
        id: vars
        run: |
          if [[ "${{ github.base_ref }}" == "okta-dev" ]]; then
            echo "ENV=dev" >> $GITHUB_OUTPUT
            echo "SECRET_ID=okta/dev/api-token" >> $GITHUB_OUTPUT
            echo "TF_DIR=okta-dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.base_ref }}" == "okta-preview" ]]; then
            echo "ENV=preview" >> $GITHUB_OUTPUT
            echo "SECRET_ID=okta/preview/api-token" >> $GITHUB_OUTPUT
            echo "TF_DIR=okta-preview" >> $GITHUB_OUTPUT
          else
            echo "Invalid branch"
            exit 1
          fi

      - name: Fetch Okta API token from Secrets Manager
        id: okta_token
        run: |
          TOKEN=$(aws secretsmanager get-secret-value \
            --secret-id ${{ steps.vars.outputs.SECRET_ID }} \
            --query SecretString --output text | jq -r .okta_api_token)
          echo "::add-mask::$TOKEN"
          echo "OKTA_API_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: ${{ steps.vars.outputs.TF_DIR }}
        run: |
          terraform init -backend-config="bucket=my-terraform-state-bucket" \
                         -backend-config="key=${{ steps.vars.outputs.ENV }}/terraform.tfstate" \
                         -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Plan
        working-directory: ${{ steps.vars.outputs.TF_DIR }}
        run: |
          terraform plan -var="okta_api_token=${{ env.OKTA_API_TOKEN }}"
